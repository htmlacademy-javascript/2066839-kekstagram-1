import { getRandomElement, getRandomInteger } from './util.js';

const MAX_PHOTOS = 25;
const AVATAR_COUNT = 6;
const LIKE_MIN_COUNT = 15;
const LIKE_MAX_COUNT = 200;
const COMMENTS_COUNT = 15;
const DESCRIPTIONS = [
  'Цветочная симфония: Прекрасное сочетание красок и фактур цветов создает нежную и романтическую картину, наполненную ароматом и красотой природы.',

  'Магический закат: Золотистые лучи заката погружают мир в сказочную атмосферу.Они играют с контурами деревьев и создают неповторимый рисунок на небе.',

  'Городская жизнь в движении: Скорость, шум и яркие неоновые огни передают динамику и особую энергию современного города.Жизнь не стоит на месте, и эта фотография иллюстрирует это насыщенное движение.',

  'Уунсет на океане: Картина спокойствия и гармонии, где ярко - оранжевые и розовые оттенки заката сливаются с прибойными волнами.Бескрайний океан наблюдает за закатом, в то время как нежный бриз ласкает кожу.',

  'Светящийся мост: В ночной городской панораме яркое освещение моста создает впечатление, будто он летит в небе.Его отражение в воде добавляет эффектности этой фотографии.',

  'Зимний чарующий лес: Воплощение зимней сказки, покрытый снегом пейзаж со сказочными деревьями.Белый покров и синие оттенки придают фотографии особую магию и таинственность.',

  'Экзотический райский остров: Бирюзовое море, песчаные пляжи и пальмы создают идеальное прозрачное фотоальбомное изображение райского острова.',

  'Темный город ночью: Огни города создают образ необычной метрополии среди ночи.Силуэты зданий и автомобилей создают загадочные и драматичные контуры в этой ночной сцене.',

  'Благоухающие яркие тюльпаны: Цветочное море, состоящее из насыщенных разнообразных тюльпанов, придают сказочную атмосферу этому изображению.Каждый цветок – это отдельная палитра пышных оттенков и текстур.',

  'Отражение гор в озере: Зеркальное отражение гор в безмятежной воде создает иллюзию двойного пейзажа, удивляющего и притягательного своей гармонией и прекрасными натуральными цветами.'
];

const NAMES = [
  'Надежда', 'Варвара', 'Алексей', 'Вероника', 'Матвей', 'Есения', 'Анна', 'Алия', 'Екатерина', 'Олеся', 'Андрей', 'Арина', 'Виктория', 'Елизавета', 'Давид', 'Аиша', 'Сергей', 'Лев', 'Денис', 'Иван', 'Амина', 'Мирослав', 'Павел', 'Мария', 'Стефания', 'София', 'Аделина', 'Александра', 'Алиса', 'Святослав', 'Леонид', 'Станислав', 'Александр', 'Максим', 'Николай', 'Тимофей', 'Дарина', 'Фёдор', 'Марина', 'Наталья', 'Майя', 'Юрик', 'Михаил', 'Нина', 'Артём', 'Диана', 'Алёна', 'Эмилия', 'Владимир', 'Софья', 'Валентина', 'Ева', 'Никита', 'Евгений', 'Зоя', 'Ариана', 'Леон', 'Марьям', 'Илья', 'Полина'
];

const MESSAGES = [
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'В целом всё неплохо. Но не всё.',
  'Всё отлично!'
];

const createRandomComment = (id) => ({
  id,
  avatar: `img/avatar-${getRandomInteger(1, AVATAR_COUNT)}.svg`,
  message: getRandomElement(MESSAGES),
  name: getRandomElement(NAMES),
});

const createPhoto = (id) => ({
  id,
  url: `photos/${id}.jpg`,
  description: getRandomElement(DESCRIPTIONS),
  likes: getRandomInteger(LIKE_MIN_COUNT, LIKE_MAX_COUNT),
  comments: Array.from({ length: getRandomInteger(0, COMMENTS_COUNT) }, (_, i) => createRandomComment(i + 1)),
});

export const createGallery = () => Array.from({ length: MAX_PHOTOS }, (_, i) => createPhoto(i + 1));
